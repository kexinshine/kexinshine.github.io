<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/06/18/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>1-两数之和</title>
    <url>/2021/01/21/1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
    <content><![CDATA[<h1 id="方法一：暴力枚举"><a href="#方法一：暴力枚举" class="headerlink" title="方法一：暴力枚举"></a>方法一：暴力枚举</h1><h2 id="思路及算法"><a href="#思路及算法" class="headerlink" title="思路及算法"></a>思路及算法</h2><p>最容易想到的方法是枚举数组中的每一个数 <code>x</code>，寻找数组中是否存在 <code>target - x</code>。<br>当我们使用遍历整个数组的方式寻找 <code>target - x</code> 时，需要注意到每一个位于 <code>x</code> 之前的元素都已经和 <code>x</code> 匹配过，因此不需要再进行匹配。而每一个元素不能被使用两次，所以我们只需要在 <code>x</code> 后面的元素中寻找 <code>target - x</code>。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span>(<span class="params">self, nums: List[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; List[int]:</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">                a = target - nums[i]</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line">                    <span class="keyword">if</span> a == nums[j]:</span><br><span class="line">                        <span class="keyword">return</span> [i, j]</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="方法二：哈希表"><a href="#方法二：哈希表" class="headerlink" title="方法二：哈希表"></a>方法二：哈希表</h1><h2 id="思路及算法-1"><a href="#思路及算法-1" class="headerlink" title="思路及算法"></a>思路及算法</h2><p>注意到方法一的时间复杂度较高的原因是寻找 <code>target - x</code> 的时间复杂度过高。因此，我们需要一种更优秀的方法，能够快速寻找数组中是否存在目标元素。如果存在，我们需要找出它的索引。<br>使用哈希表，可以将寻找 <code>target - x</code> 的时间复杂度降低到从 O(N) 降低到 O(1)。<br>这样我们创建一个哈希表，对于每一个 <code>x</code>，我们首先查询哈希表中是否存在 <code>target - x</code>，然后将 <code>x</code> 插入到哈希表中，即可保证不会让 <code>x</code> 和自己匹配。</p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span>(<span class="params">self, nums: List[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; List[int]:</span></span><br><span class="line">        hashtable = <span class="built_in">dict</span>()</span><br><span class="line">        <span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> target - num <span class="keyword">in</span> hashtable:</span><br><span class="line">                <span class="keyword">return</span> [hashtable[target - num], i]</span><br><span class="line">            hashtable[nums[i]] = i</span><br><span class="line">        <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Hash</tag>
      </tags>
  </entry>
  <entry>
    <title>2-hexo迁移</title>
    <url>/2021/06/18/2-hexo%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<h1 id="多Git账号管理"><a href="#多Git账号管理" class="headerlink" title="多Git账号管理"></a>多Git账号管理</h1><h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;913178007@qq.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>分别生成多个密钥例如id_rsa(公司git)，id_rsa_me(个人博客git)，并分别将.pub里的内容复制到各自的ssh里</p>
<h2 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi ～/.ssh/config</span><br><span class="line"></span><br><span class="line"><span class="comment">#company</span></span><br><span class="line">Host xxx.com</span><br><span class="line">HostName xxx.com</span><br><span class="line">User *@xxx.com</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment">#blog</span></span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User 913178007@qq.com</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_me</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h1 id="安装hexo-mac系统"><a href="#安装hexo-mac系统" class="headerlink" title="安装hexo(mac系统)"></a>安装hexo(mac系统)</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p><a href="https://nodejs.org/en/">Node.js</a></p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install --unsafe-perm --verbose -g hexo</span><br><span class="line">sudo npm install --unsafe-perm --verbose -g hexo-server</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>3-MarkDown语法</title>
    <url>/2021/06/24/3-MarkDown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<!--d
| 元素 | Markdown语法 |
| :---: | :---: |
| 标题 | # H1<br>## H2<br>### H3 |
| 粗体 | **bold text** |
| 斜体 | *italicized text* |
| 块引用 | > blockquote |
| 有序列表 | 1. First item<br>2. Second item<br>3. Third item |
| 无序列表 | - First item<br>- Second item<br>- Third item |
| 代码 | `code` |
| 代码块 | ```python<br>print("hello world!)<br>``` |
| 水平线 | --- |
| 超链接 | [title](https://www.example.com) |
| 图片 | ![alt text](image.jpg) |
-->
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="left">Markdown语法</th>
</tr>
</thead>
<tbody><tr>
<td align="center">标题</td>
<td align="left"># H1<br>## H2<br>### H3</td>
</tr>
<tr>
<td align="center">粗体</td>
<td align="left"><code>**bold text**</code></td>
</tr>
<tr>
<td align="center">斜体</td>
<td align="left"><code>*italicized text*</code></td>
</tr>
<tr>
<td align="center">块引用</td>
<td align="left">&gt; blockquote</td>
</tr>
<tr>
<td align="center">有序列表</td>
<td align="left">1. First item<br>2. Second item</td>
</tr>
<tr>
<td align="center">无序列表</td>
<td align="left">- First item<br>- Second item<br>- Third item</td>
</tr>
<tr>
<td align="center">代码</td>
<td align="left"><code>`code`</code></td>
</tr>
<tr>
<td align="center">代码块</td>
<td align="left"><code>```python</code><br><code>print(&quot;hello world!&quot;)</code><br><code>```</code></td>
</tr>
<tr>
<td align="center">水平线</td>
<td align="left">—</td>
</tr>
<tr>
<td align="center">超链接</td>
<td align="left"><code>[科小鑫的博客](https://kexinshine.github.io)</code></td>
</tr>
<tr>
<td align="center">图片</td>
<td align="left"><code>![alt text](image.jpg)</code></td>
</tr>
</tbody></table>
<a id="more"></a>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h2 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h2><p><strong>科小鑫的博客</strong></p>
<h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><p><em>科小鑫的博客</em></p>
<h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><blockquote>
<p>块引用</p>
<blockquote>
<p>嵌套引用</p>
</blockquote>
</blockquote>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol>
<li>起因</li>
<li>经过</li>
<li>结果</li>
</ol>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>语文</li>
<li>数学</li>
<li>英语</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>这是一行代码：<code>fmt.Println(&quot;hello world!&quot;)</code></p>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ = <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    print(<span class="string">&quot;hello world!&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h2><hr>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://kexinshine.github.io/">科小鑫的博客</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="/images/favicon.ico" title="科小鑫的头像"> </p>
]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>4-Jetbrains系列产品重置试用期</title>
    <url>/2021/07/15/4-Jetbrains%E7%B3%BB%E5%88%97%E4%BA%A7%E5%93%81%E9%87%8D%E7%BD%AE%E8%AF%95%E7%94%A8%E6%9C%9F/</url>
    <content><![CDATA[<!--d
| 元素 | Markdown语法 |
| :---: | :---: |
| 标题 | # H1<br>## H2<br>### H3 |
| 粗体 | **bold text** |
| 斜体 | *italicized text* |
| 块引用 | > blockquote |
| 有序列表 | 1. First item<br>2. Second item<br>3. Third item |
| 无序列表 | - First item<br>- Second item<br>- Third item |
| 代码 | `code` |
| 代码块 | ```python<br>print("hello world!)<br>``` |
| 水平线 | --- |
| 超链接 | [title](https://www.example.com) |
| 图片 | ![alt text](image.jpg) |
-->
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Jetbrains系列产品一般都会允许试用30天，而这个插件的功能就是不断重置这个试用时间。</p>
<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>在<code>Settings/Preferences</code>-&gt;<code>Plugins</code>内手动添加第三方插件仓库地址：<code>https://plugins.zhile.io</code>，然后搜索<code>IDE Eval Reset</code>插件进行安装。</p>
<h2 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h2><p><code>Help</code>-&gt;<code>Eval Reset</code>打开插件，勾选<code>Auto reset before per restart</code>(重启IDE自动重置)，点击Reset即可。</p>
<hr>
<blockquote>
<p>本文转自：<a href="https://zhile.io/2020/11/18/jetbrains-eval-reset-da33a93d.html">https://zhile.io/2020/11/18/jetbrains-eval-reset-da33a93d.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Goland</tag>
      </tags>
  </entry>
  <entry>
    <title>超市</title>
    <url>/2021/10/14/%E8%B6%85%E5%B8%82/</url>
    <content><![CDATA[<!--d
| 元素 | Markdown语法 |
| :---: | :---: |
| 标题 | # H1<br>## H2<br>### H3 |
| 粗体 | **bold text** |
| 斜体 | *italicized text* |
| 块引用 | > blockquote |
| 有序列表 | 1. First item<br>2. Second item<br>3. Third item |
| 无序列表 | - First item<br>- Second item<br>- Third item |
| 代码 | `code` |
| 代码块 | ```python<br>print("hello world!)<br>``` |
| 水平线 | --- |
| 超链接 | [title](https://www.example.com) |
| 图片 | ![alt text](image.jpg) |
-->
<h1 id="超市"><a href="#超市" class="headerlink" title="超市"></a>超市</h1><blockquote>
<p>又是整整一天的伏案<br>赶在夕阳落幕前<br>进楼下的超市转转<br>往来的人们挑选蔬果和酸奶<br>这烟火气息就像记忆中你的温软<br>一个白衣女孩从货架那段印面而来<br>蹙着眉费劲地抱着她满载的购物篮<br>她身上有我最熟悉不过的香味和步态<br>我唐突地说我想帮忙拎一小段  </p>
<p>她可能笑话这生硬的搭讪<br>也可能以为我对她有好感<br>我拎着篮子在她身后走得慢<br>是重温和你逛超市的傍晚</p>
</blockquote>
]]></content>
  </entry>
</search>
